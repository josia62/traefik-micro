version: "3.3"

services:
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config.toml:/etc/traefik/config.toml:ro"

  micro1:
    image: micro1
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.micro1.rule=PathPrefix(`/api/user`)"
      - "traefik.http.routers.micro1.entrypoints=web"
      - "traefik.http.services.micro1.loadbalancer.server.port=4000"  # Internal container port
    expose:
      - "4000"  # Expose internal port
    restart: always

  micro2:
    image: micro2
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.micro2.rule=PathPrefix(`/api/payment`)"
      - "traefik.http.routers.micro2.entrypoints=web"
      - "traefik.http.services.micro2.loadbalancer.server.port=4001"  # Internal container port
    expose:
      - "4001"  # Expose internal port
    restart: always

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: local
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always

volumes:
  postgres_data:


